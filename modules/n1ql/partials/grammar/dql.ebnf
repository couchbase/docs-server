/* Data Query Language */

dql-statement ::= select |
                  infer |
                  update-statistics

/***************
 * N1QL SELECT *
 ***************/

/* tag::select[] */
select ::= select-term ( set-op select-term )* order-by-clause? limit-clause? offset-clause?
/* end::select[] */

/* tag::select-term[] */
select-term ::= subselect | '(' select ')'
/* end::select-term[] */

/* tag::subselect[] */
subselect ::= select-from | from-select
/* end::subselect[] */

/* tag::select-from[] */
select-from ::= with-clause? select-clause from-clause? let-clause? where-clause? group-by-clause? window-clause?
/* end::select-from[] */

/* tag::from-select[] */
from-select ::= with-clause? from-clause let-clause? where-clause? group-by-clause? window-clause? select-clause
/* end::from-select[] */

/* tag::set-op[] */
set-op ::= ( 'UNION' | 'INTERSECT' | 'EXCEPT' ) 'ALL'?
/* end::set-op[] */


/* WITH Clause */

/* tag::with-clause[] */
with-clause ::= 'WITH' alias 'AS' '(' ( select | expr ) ')'
                 ( ',' alias 'AS' '(' ( select | expr ) ')' )*
/* end::with-clause[] */

/* tag::alias[] */
alias ::= identifier
/* end::alias[] */


/* SELECT Clause */

/* tag::select-clause[] */
select-clause ::= 'SELECT' hint-comment? projection
/* end::select-clause[] */

hint-comment ::= [https://github.com/couchbase/docs-server/blob/release/7.1/modules/n1ql/partials/grammar/hints.ebnf]

/* tag::projection[] */
projection ::= ( 'ALL' | 'DISTINCT' )? ( result-expr ( ',' result-expr )* |
               ( 'RAW' | 'ELEMENT' | 'VALUE' ) expr ( 'AS'? alias )? )
/* end::projection[] */

/* tag::result-expr[] */
result-expr ::= ( path '.' )? '*' | expr ( 'AS'? alias )?
/* end::result-expr[] */

/* tag::path[] */
path ::= identifier ( '[' expr ']' )* ( '.' identifier ( '[' expr ']' )* )*
/* end::path[] */


/* FROM Clause */

/* tag::from-clause[] */
from-clause ::= 'FROM' from-terms
/* end::from-clause[] */

/* tag::from-terms[] */
from-terms ::= ( from-keyspace | from-subquery | from-generic )
               ( join-clause | nest-clause | unnest-clause )* comma-separated-join*
/* end::from-terms[] */

/* tag::from-keyspace[] */
from-keyspace ::= keyspace-ref ( 'AS'? alias )? use-clause?
/* end::from-keyspace[] */

/* tag::keyspace-ref[] */
keyspace-ref ::= keyspace-path | keyspace-partial
/* end::keyspace-ref[] */

/* tag::keyspace-path[] */
keyspace-path ::= ( namespace ':' )? bucket ( '.' scope '.' collection )?
/* end::keyspace-path[] */

/* tag::keyspace-partial[] */
keyspace-partial ::= collection
/* end::keyspace-partial[] */

/* tag::namespace[] */
namespace ::= identifier
/* end::namespace[] */

/* tag::bucket[] */
bucket ::= identifier
/* end::bucket[] */

/* tag::scope[] */
scope ::= identifier
/* end::scope[] */

/* tag::collection[] */
collection ::= identifier
/* end::collection[] */

/* tag::from-subquery[] */
from-subquery ::= subquery-expr 'AS'? alias
/* end::from-subquery[] */

/* tag::subquery-expr[] */
subquery-expr ::= '(' select ')'
/* end::subquery-expr[] */

/* tag::from-generic[] */
from-generic ::= expr ( 'AS' alias )?
/* end::from-generic[] */


/* JOIN Clause */

/* tag::join-clause[] */
join-clause ::= ansi-join-clause | lookup-join-clause | index-join-clause
/* end::join-clause[] */


/* ANSI JOIN */

/* tag::ansi-join-clause[] */
ansi-join-clause ::= ansi-join-type? 'JOIN' ansi-join-rhs ansi-join-predicate
/* end::ansi-join-clause[] */

/* tag::ansi-join-type[] */
ansi-join-type ::= 'INNER' | ( 'LEFT' | 'RIGHT' ) 'OUTER'?
/* end::ansi-join-type[] */

/* tag::ansi-join-rhs[] */
ansi-join-rhs ::= rhs-keyspace | rhs-subquery | rhs-generic
/* end::ansi-join-rhs[] */

/* tag::rhs-keyspace[] */
rhs-keyspace ::= keyspace-ref ( 'AS'? alias )? ansi-join-hints?
/* end::rhs-keyspace[] */

/* tag::rhs-subquery[] */
rhs-subquery ::= subquery-expr 'AS'? alias
/* end::rhs-subquery[] */

/* tag::rhs-generic[] */
rhs-generic ::= expr ( 'AS'? alias )?
/* end::rhs-generic[] */

/* tag::ansi-join-hints[] */
ansi-join-hints ::= use-hash-hint | use-nl-hint | multiple-hints
/* end::ansi-join-hints[] */

/* tag::use-hash-hint[] */
use-hash-hint ::= 'USE' use-hash-term
/* end::use-hash-hint[] */

/* tag::use-hash-term[] */
use-hash-term ::= 'HASH' '(' ( 'BUILD' | 'PROBE' ) ')'
/* end::use-hash-term[] */

/* tag::use-nl-hint[] */
use-nl-hint ::= 'USE' use-nl-term
/* end::use-nl-hint[] */

/* tag::use-nl-term[] */
use-nl-term ::= 'NL'
/* end::use-nl-term[] */

/* tag::multiple-hints[] */
multiple-hints ::= 'USE' ( ansi-hint-terms other-hint-terms |
                           other-hint-terms ansi-hint-terms )
/* end::multiple-hints[] */

/* tag::ansi-hint-terms[] */
ansi-hint-terms ::= use-hash-term | use-nl-term
/* end::ansi-hint-terms[] */

/* tag::other-hint-terms[] */
other-hint-terms ::= use-index-term | use-keys-term
/* end::other-hint-terms[] */

/* tag::ansi-join-predicate[] */
ansi-join-predicate ::= 'ON' expr
/* end::ansi-join-predicate[] */


/* Lookup JOIN */

/* tag::lookup-join-clause[] */
lookup-join-clause ::= lookup-join-type? 'JOIN' lookup-join-rhs lookup-join-predicate
/* end::lookup-join-clause[] */

/* tag::lookup-join-type[] */
lookup-join-type ::= 'INNER' | ( 'LEFT' 'OUTER'? )
/* end::lookup-join-type[] */

/* tag::lookup-join-rhs[] */
lookup-join-rhs ::= keyspace-ref ( 'AS'? alias )?
/* end::lookup-join-rhs[] */

/* tag::lookup-join-predicate[] */
lookup-join-predicate ::= 'ON' 'PRIMARY'? 'KEYS' expr
/* end::lookup-join-predicate[] */


/* Index JOIN */

/* tag::index-join-clause[] */
index-join-clause ::= index-join-type? 'JOIN' index-join-rhs index-join-predicate
/* end::index-join-clause[] */

/* tag::index-join-type[] */
index-join-type ::= 'INNER' | ( 'LEFT' 'OUTER'? )
/* end::index-join-type[] */

/* tag::index-join-rhs[] */
index-join-rhs ::= keyspace-ref ( 'AS'? alias )?
/* end::index-join-rhs[] */

/* tag::index-join-predicate[] */
index-join-predicate ::= 'ON' 'PRIMARY'? 'KEY' expr 'FOR' alias
/* end::index-join-predicate[] */


/* Comma-Separated Cartesian Join */

/* tag::comma-separated-join[] */
comma-separated-join ::= ',' ( rhs-keyspace | rhs-subquery | rhs-generic )
/* end::comma-separated-join[] */


/* NEST Clause */

/* tag::nest-clause[] */
nest-clause ::= ansi-nest-clause | lookup-nest-clause | index-nest-clause
/* end::nest-clause[] */


/* ANSI NEST */

/* tag::ansi-nest-clause[] */
ansi-nest-clause ::= ansi-nest-type? 'NEST' ansi-nest-rhs ansi-nest-predicate
/* end::ansi-nest-clause[] */

/* tag::ansi-nest-type[] */
ansi-nest-type ::= 'INNER' | ( 'LEFT' 'OUTER'? )
/* end::ansi-nest-type[] */

/* tag::ansi-nest-rhs[] */
ansi-nest-rhs ::= keyspace-ref ( 'AS'? alias )?
/* end::ansi-nest-rhs[] */

/* tag::ansi-nest-predicate[] */
ansi-nest-predicate ::= 'ON' expr
/* end::ansi-nest-predicate[] */


/* Lookup NEST */

/* tag::lookup-nest-clause[] */
lookup-nest-clause ::= lookup-nest-type? 'NEST' lookup-nest-rhs lookup-nest-predicate
/* end::lookup-nest-clause[] */

/* tag::lookup-nest-type[] */
lookup-nest-type ::= 'INNER' | ( 'LEFT' 'OUTER'? )
/* end::lookup-nest-type[] */

/* tag::lookup-nest-rhs[] */
lookup-nest-rhs ::= keyspace-ref ( 'AS'? alias )?
/* end::lookup-nest-rhs[] */

/* tag::lookup-nest-predicate[] */
lookup-nest-predicate ::= 'ON' 'KEYS' expr
/* end::lookup-nest-predicate[] */


/* Index NEST */

/* tag::index-nest-clause[] */
index-nest-clause ::= index-nest-type? 'NEST' index-nest-rhs index-nest-predicate
/* end::index-nest-clause[] */

/* tag::index-nest-type[] */
index-nest-type ::= 'INNER' | ( 'LEFT' 'OUTER'? )
/* end::index-nest-type[] */

/* tag::index-nest-rhs[] */
index-nest-rhs ::= keyspace-ref ( 'AS'? alias )?
/* end::index-nest-rhs[] */

/* tag::index-nest-predicate[] */
index-nest-predicate ::= 'ON' 'KEY' expr 'FOR' alias
/* end::index-nest-predicate[] */


/* UNNEST Clause */

/* tag::unnest-clause[] */
unnest-clause ::= unnest-type? ( 'UNNEST' | 'FLATTEN' ) expr ( 'AS'? alias )?
/* end::unnest-clause[] */

/* tag::unnest-type[] */
unnest-type ::= 'INNER' | ( 'LEFT' 'OUTER'? )
/* end::unnest-type[] */


/* USE Clause */

/* tag::use-clause[] */
use-clause ::= use-keys-clause | use-index-clause
/* end::use-clause[] */

/* tag::use-keys-clause[] */
use-keys-clause ::= 'USE' use-keys-term
/* end::use-keys-clause[] */

/* tag::use-keys-term[] */
use-keys-term ::= 'PRIMARY'? 'KEYS' expr
/* end::use-keys-term[] */

/* tag::use-index-clause[] */
use-index-clause ::= 'USE' use-index-term
/* end::use-index-clause[] */

/* tag::use-index-term[] */
use-index-term ::= 'INDEX' '(' index-ref ( ',' index-ref )* ')'
/* end::use-index-term[] */

/* tag::index-ref[] */
index-ref ::= index-name? index-type?
/* end::index-ref[] */

/* tag::index-name[] */
index-name ::= identifier
/* end::index-name[] */

/* tag::index-type[] */
index-type ::= 'USING' ( 'GSI' | 'FTS' )
/* end::index-type[] */


/* LET Clause */

/* tag::let-clause[] */
let-clause ::= 'LET' alias '=' expr ( ',' alias '=' expr )*
/* end::let-clause[] */


/* WHERE Clause */

/* tag::where-clause[] */
where-clause ::= 'WHERE' cond
/* end::where-clause[] */

/* tag::cond[] */
cond ::= expr
/* end::cond[] */


/* GROUP BY Clause */

/* tag::group-by-clause[] */
group-by-clause ::= 'GROUP' 'BY' group-term ( ',' group-term )*
                    letting-clause? having-clause? | letting-clause
/* end::group-by-clause[] */

/* tag::group-term[] */
group-term ::= expr ( ('AS')? alias )?
/* end::group-term[] */

/* tag::letting-clause[] */
letting-clause ::= 'LETTING' alias '=' expr ( ',' alias '=' expr )*
/* end::letting-clause[] */

/* tag::having-clause[] */
having-clause ::= 'HAVING' cond
/* end::having-clause[] */


/* WINDOW Clause */

/* tag::window-clause[] */
window-clause ::= 'WINDOW' window-declaration ( ',' window-declaration )*
/* end::window-clause[] */

/* tag::window-declaration[] */
window-declaration ::= window-name 'AS' '(' window-definition ')'
/* end::window-declaration[] */

/* tag::window-name[] */
window-name ::= identifier
/* end::window-name[] */

/* tag::window-definition[] */
window-definition ::= window-ref? window-partition-clause? window-order-clause?
                      window-frame-clause?
/* end::window-definition[] */

/* tag::window-ref[] */
window-ref ::= identifier
/* end::window-ref[] */

/* tag::window-partition-clause[] */
window-partition-clause ::= 'PARTITION' 'BY' expr ( ',' expr )*
/* end::window-partition-clause[] */

/* tag::window-order-clause[] */
window-order-clause ::= 'ORDER' 'BY' ordering-term ( ',' ordering-term )*
/* end::window-order-clause[] */

/* tag::window-frame-clause[] */
window-frame-clause ::= ( 'ROWS' | 'RANGE' | 'GROUPS' ) window-frame-extent
                        window-frame-exclusion?
/* end::window-frame-clause[] */

/* tag::window-frame-extent[] */
window-frame-extent ::= 'UNBOUNDED' 'PRECEDING' | valexpr 'PRECEDING' | 'CURRENT' 'ROW' |
                        'BETWEEN' ( 'UNBOUNDED' 'PRECEDING' | 'CURRENT' 'ROW' |
                                     valexpr ( 'PRECEDING' | 'FOLLOWING' ) )
                            'AND' ( 'UNBOUNDED' 'FOLLOWING' | 'CURRENT' 'ROW' |
                                     valexpr ( 'PRECEDING' | 'FOLLOWING' ) )
/* end::window-frame-extent[] */

/* tag::window-frame-exclusion[] */
window-frame-exclusion ::= 'EXCLUDE' ( 'CURRENT' 'ROW' | 'GROUP' | 'TIES' | 'NO' 'OTHERS' )
/* end::window-frame-exclusion[] */


/* ORDER BY Clause */

/* tag::order-by-clause[] */
order-by-clause ::= 'ORDER' 'BY' ordering-term ( ',' ordering-term )*
/* end::order-by-clause[] */

/* tag::ordering-term[] */
ordering-term ::= expr ( 'ASC' | 'DESC' )? ( 'NULLS' ( 'FIRST' | 'LAST' ) )?
/* end::ordering-term[] */


/* LIMIT Clause */

/* tag::limit-clause[] */
limit-clause ::= 'LIMIT' expr
/* end::limit-clause[] */


/* OFFSET Clause */

/* tag::offset-clause[] */
offset-clause ::= 'OFFSET' expr
/* end::offset-clause[] */
