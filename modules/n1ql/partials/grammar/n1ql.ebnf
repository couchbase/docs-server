/***************
 * Expressions *
 ***************/

expr ::= literal |
         identifier |
         arithmetic-term |
         comparison-term |
         concatenation-term |
         logical-term |
         case-expr |
         collection-expr |
         construction-expr |
         nested-expr |
         function-call | /* inc window function */
         subquery-expr |
         '(' expr ')'


/* Logical Terms */

logical-term ::= and | or | not

/* tag::and[] */
and ::= condition 'AND' condition
/* end::and[] */

/* tag::or[] */
or ::= condition 'OR' condition
/* end::or[] */

/* tag::not[] */
not ::= 'NOT' condition
/* end::not[] */


/* Collection Expressions */

collection-expr ::= exists-expr | in-expr | within-expr | range-cond | range-xform

/* tag::exists-expr[] */
exists-expr ::= 'EXISTS' expr
/* end::exists-expr[] */

/* tag::in-expr[] */
in-expr ::= search-expr 'NOT'? 'IN' target-expr
/* end::in-expr[] */

/* tag::within-expr[] */
within-expr ::= search-expr 'NOT'? 'WITHIN' target-expr
/* end::within-expr[] */

/* tag::range-cond[] */
range-cond ::= ( ( 'ANY' | 'SOME' ) ( 'AND' 'EVERY' )? | 'EVERY' )
               range 'SATISFIES' cond 'END'
/* end::range-cond[] */

/* tag::range-xform[] */
range-xform ::= ( ( 'ARRAY' | 'FIRST' ) | 'OBJECT' name-expr ':' ) var-expr
                'FOR' range ( 'WHEN' cond )? 'END'
/* end::range-xform[] */

/* tag::range[] */
range ::= ( name-var ':' )? var ( 'IN' | 'WITHIN' ) expr
    ( ',' ( name-var ':' )? var ( 'IN' | 'WITHIN' ) expr )*
/* end::range[] */

search-expr ::= expr
target-expr ::= expr
var-expr ::= expr
name-expr ::= expr
var ::= identifier
name-var ::= identifier


/* Function Calls */

function-call ::= ordinary-function |
                  aggregate-function |
                  window-function

aggregate-function-name ::= identifier
window-function-name ::= identifier

/* tag::aggregate-function[] */
aggregate-function ::= aggregate-function-name '(' ( aggregate-quantifier? expr |
                       ( path '.' )? '*' ) ')' filter-clause? over-clause?
/* end::aggregate-function[] */

/* tag::aggregate-quantifier[] */
aggregate-quantifier ::= 'ALL' | 'DISTINCT'
/* end::aggregate-quantifier[] */

/* tag::filter-clause[] */
filter-clause ::= 'FILTER' '(' 'WHERE' cond ')'
/* end::filter-clause[] */

/* tag::window-function[] */
window-function ::= window-function-name '(' window-function-arguments ')'
                    window-function-options? over-clause
/* end::window-function[] */

/* tag::window-function-arguments[] */
window-function-arguments ::= ( expr ( ',' expr ( ',' expr )? )? )?
/* end::window-function-arguments[] */

/* tag::window-function-options[] */
window-function-options ::= nth-val-from? nulls-treatment?
/* end::window-function-options[] */

/* tag::nthval-from[] */
nthval-from ::= 'FROM' ( 'FIRST' | 'LAST' )
/* end::nthval-from[] */

/* tag::nulls-treatment[] */
nulls-treatment ::= ( 'RESPECT' | 'IGNORE' ) 'NULLS'
/* end::nulls-treatment[] */

/* tag::over-clause[] */
over-clause ::= 'OVER' ( '(' window-definition ')' | window-ref )
/* end::over-clause[] */
